import re
from datetime import date, time, datetime

# –†–∞–∑—Ä–µ—à–∞–µ–º –±—É–∫–≤—ã –ª–∞—Ç–∏–Ω–∏—Ü—ã/–∫–∏—Ä–∏–ª–ª–∏—Ü—ã, –ø—Ä–æ–±–µ–ª, –¥–µ—Ñ–∏—Å, —Ç–æ—á–∫—É. 2‚Äì80 —Å–∏–º–≤–æ–ª–æ–≤.
CITY_RE = re.compile(r"^[A-Za-z√Ä-√ø\u0400-\u04FF\s\.\-]{2,80}$")

# –ò–º—è: —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ –¥–µ—Ñ–∏—Å, 1‚Äì50 —Å–∏–º–≤–æ–ª–æ–≤
NAME_RE = re.compile(r"^[A-Za-z√Ä-√ø\u0400-\u04FF\-]{1,50}$")

def validate_name(s: str) -> str:
    s = (s or "").strip()
    if not NAME_RE.fullmatch(s):
        raise ValueError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è (—Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ –¥–µ—Ñ–∏—Å, –¥–æ 50 —Å–∏–º–≤–æ–ª–æ–≤).")
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º: –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∑–∞–≥–ª–∞–≤–Ω–∞—è, –æ—Å—Ç–∞–ª—å–Ω–æ–µ –∫–∞–∫ –µ—Å—Ç—å
    return s[:50]

def validate_city(s: str) -> str:
    s = (s or "").strip()
    if not CITY_RE.fullmatch(s):
        raise ValueError("–ì–æ—Ä–æ–¥ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –ø—Ä–æ–±–µ–ª—ã, —Ç–æ—á–∫—É –∏–ª–∏ –¥–µ—Ñ–∏—Å (2‚Äì80 —Å–∏–º–≤–æ–ª–æ–≤).")
    return s[:80]

def parse_date_ddmmyyyy(s: str) -> date:
    s = (s or "").strip()
    try:
        d = datetime.strptime(s, "%d.%m.%Y").date()
    except Exception:
        raise ValueError("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏ –¥–∞—Ç—É –∫–∞–∫ –î–î.–ú–ú.–ì–ì–ì–ì, –Ω–∞–ø—Ä–∏–º–µ—Ä: 25.12.1990.")
    # –ü—Ä–æ—Å—Ç–µ–π—à–∞—è –∑–¥—Ä–∞–≤–æ—Å—Ç—å: –Ω–µ –≤ –±—É–¥—É—â–µ–º –∏ –Ω–µ —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–∞—è –¥–∞—Ç–∞
    if d > date.today():
        raise ValueError("–î–∞—Ç–∞ –∏–∑ –±—É–¥—É—â–µ–≥–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è üôÇ")
    if d.year < 1900:
        raise ValueError("–£–∫–∞–∂–∏ –≥–æ–¥ –Ω–µ —Ä–∞–Ω—å—à–µ 1900.")
    return d

def parse_time_hhmm(s: str) -> time:
    s = (s or "").strip()
    try:
        t = datetime.strptime(s, "%H:%M").time()
    except Exception:
        raise ValueError("–í–≤–µ–¥–∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú, –Ω–∞–ø—Ä–∏–º–µ—Ä: 09:15.")
    return t
